// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StrattonOakmontServices;

namespace StrattonOakmontServices.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("StrattonOakmontModels.Bond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySecId")
                        .HasColumnType("int");

                    b.Property<string>("FinalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecurityId")
                        .HasColumnType("int");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("CompanySecId");

                    b.HasIndex("SecurityId");

                    b.HasIndex("UserSecId");

                    b.ToTable("Bonds");
                });

            modelBuilder.Entity("StrattonOakmontModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("StrattonOakmontModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Сapitalization")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("StrattonOakmontModels.Indastrial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecurityIndId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SecurityIndId");

                    b.ToTable("Indastrials");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securities.PriceСhange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("BondId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepositReceiptsId")
                        .HasColumnType("int");

                    b.Property<int?>("ForwardId")
                        .HasColumnType("int");

                    b.Property<int?>("FuturesId")
                        .HasColumnType("int");

                    b.Property<int?>("OptionId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("StoсkId")
                        .HasColumnType("int");

                    b.Property<int?>("WrightId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("BondId");

                    b.HasIndex("DepositReceiptsId");

                    b.HasIndex("ForwardId");

                    b.HasIndex("FuturesId");

                    b.HasIndex("OptionId");

                    b.HasIndex("StoсkId");

                    b.HasIndex("WrightId");

                    b.ToTable("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<string>("FinalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Getter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LifeCycle")
                        .HasColumnType("int");

                    b.Property<string>("PerSent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecuritySubId")
                        .HasColumnType("int");

                    b.Property<string>("Setter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("SecuritySubId");

                    b.HasIndex("UserSecId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.DepositReceipts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BondId")
                        .HasColumnType("int");

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<string>("FinalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LifeCycle")
                        .HasColumnType("int");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecuritySubId")
                        .HasColumnType("int");

                    b.Property<int?>("StoсkId")
                        .HasColumnType("int");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BondId");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("SecuritySubId");

                    b.HasIndex("StoсkId");

                    b.HasIndex("UserSecId");

                    b.ToTable("DepositReceipts");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Forward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<int>("FinalPrice")
                        .HasColumnType("int");

                    b.Property<string>("FinalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndastrialSecId")
                        .HasColumnType("int");

                    b.Property<string>("NameIndastry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecurityIndId")
                        .HasColumnType("int");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("IndastrialSecId");

                    b.HasIndex("SecurityIndId");

                    b.HasIndex("UserSecId");

                    b.ToTable("Forwards");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Futures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<int>("FinalPrice")
                        .HasColumnType("int");

                    b.Property<string>("FinalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndastrialSecId")
                        .HasColumnType("int");

                    b.Property<string>("NameIndastry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecurityIndId")
                        .HasColumnType("int");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("IndastrialSecId");

                    b.HasIndex("SecurityIndId");

                    b.HasIndex("UserSecId");

                    b.ToTable("Futures");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<int>("FinalPrice")
                        .HasColumnType("int");

                    b.Property<string>("FinalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndastrialSecId")
                        .HasColumnType("int");

                    b.Property<string>("NameIndastry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecurityIndId")
                        .HasColumnType("int");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("IndastrialSecId");

                    b.HasIndex("SecurityIndId");

                    b.HasIndex("UserSecId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.SecurityInd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SecurityInds");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Type.SecuritySub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SecuritySubs");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Wright", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActiveId")
                        .HasColumnType("int");

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<int>("FinalPrice")
                        .HasColumnType("int");

                    b.Property<string>("FinalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndastrialSecId")
                        .HasColumnType("int");

                    b.Property<string>("NameIndastry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecurityIndId")
                        .HasColumnType("int");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveId");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("IndastrialSecId");

                    b.HasIndex("SecurityIndId");

                    b.HasIndex("UserSecId");

                    b.ToTable("Wrights");
                });

            modelBuilder.Entity("StrattonOakmontModels.Stoсk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CategorySecId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySecId")
                        .HasColumnType("int");

                    b.Property<bool>("Divisibility")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SecurityId")
                        .HasColumnType("int");

                    b.Property<string>("UserSecId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorySecId");

                    b.HasIndex("CompanySecId");

                    b.HasIndex("SecurityId");

                    b.HasIndex("UserSecId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StrattonOakmontModels.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecuritySubId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SecuritySubId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("StrattonOakmontModels.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("StrattonOakmontModels.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StrattonOakmontModels.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("StrattonOakmontModels.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StrattonOakmontModels.Bond", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Company", "CompanySec")
                        .WithMany()
                        .HasForeignKey("CompanySecId");

                    b.HasOne("StrattonOakmontModels.Security", "Security")
                        .WithMany("Bonds")
                        .HasForeignKey("SecurityId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("CategorySec");

                    b.Navigation("CompanySec");

                    b.Navigation("Security");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.Indastrial", b =>
                {
                    b.HasOne("StrattonOakmontModels.Securityes.SecurityInd", "SecurityInd")
                        .WithMany()
                        .HasForeignKey("SecurityIndId");

                    b.Navigation("SecurityInd");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securities.PriceСhange", b =>
                {
                    b.HasOne("StrattonOakmontModels.Securityes.Bill", null)
                        .WithMany("PriceСhanges")
                        .HasForeignKey("BillId");

                    b.HasOne("StrattonOakmontModels.Bond", "Bond")
                        .WithMany("PriceСhanges")
                        .HasForeignKey("BondId");

                    b.HasOne("StrattonOakmontModels.Securityes.DepositReceipts", null)
                        .WithMany("PriceСhanges")
                        .HasForeignKey("DepositReceiptsId");

                    b.HasOne("StrattonOakmontModels.Securityes.Forward", null)
                        .WithMany("PriceСhanges")
                        .HasForeignKey("ForwardId");

                    b.HasOne("StrattonOakmontModels.Securityes.Futures", null)
                        .WithMany("PriceСhanges")
                        .HasForeignKey("FuturesId");

                    b.HasOne("StrattonOakmontModels.Securityes.Option", null)
                        .WithMany("PriceСhanges")
                        .HasForeignKey("OptionId");

                    b.HasOne("StrattonOakmontModels.Stoсk", "Stoсk")
                        .WithMany("PriceСhanges")
                        .HasForeignKey("StoсkId");

                    b.HasOne("StrattonOakmontModels.Securityes.Wright", null)
                        .WithMany("PriceСhanges")
                        .HasForeignKey("WrightId");

                    b.Navigation("Bond");

                    b.Navigation("Stoсk");
                });

            modelBuilder.Entity("StrattonOakmontModels.Security", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", null)
                        .WithMany("Securities")
                        .HasForeignKey("CategoryId");

                    b.HasOne("StrattonOakmontModels.Company", "Company")
                        .WithOne("Security")
                        .HasForeignKey("StrattonOakmontModels.Security", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Bill", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Securityes.Type.SecuritySub", "SecuritySub")
                        .WithMany("Bills")
                        .HasForeignKey("SecuritySubId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("CategorySec");

                    b.Navigation("SecuritySub");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.DepositReceipts", b =>
                {
                    b.HasOne("StrattonOakmontModels.Bond", "Bond")
                        .WithMany()
                        .HasForeignKey("BondId");

                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Securityes.Type.SecuritySub", "SecuritySub")
                        .WithMany("DepositReceipts")
                        .HasForeignKey("SecuritySubId");

                    b.HasOne("StrattonOakmontModels.Stoсk", "Stoсk")
                        .WithMany()
                        .HasForeignKey("StoсkId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("Bond");

                    b.Navigation("CategorySec");

                    b.Navigation("SecuritySub");

                    b.Navigation("Stoсk");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Forward", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Indastrial", "IndastrialSec")
                        .WithMany()
                        .HasForeignKey("IndastrialSecId");

                    b.HasOne("StrattonOakmontModels.Securityes.SecurityInd", "SecurityInd")
                        .WithMany("Forwards")
                        .HasForeignKey("SecurityIndId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("CategorySec");

                    b.Navigation("IndastrialSec");

                    b.Navigation("SecurityInd");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Futures", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Indastrial", "IndastrialSec")
                        .WithMany()
                        .HasForeignKey("IndastrialSecId");

                    b.HasOne("StrattonOakmontModels.Securityes.SecurityInd", "SecurityInd")
                        .WithMany("Futures")
                        .HasForeignKey("SecurityIndId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("CategorySec");

                    b.Navigation("IndastrialSec");

                    b.Navigation("SecurityInd");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Option", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Indastrial", "IndastrialSec")
                        .WithMany()
                        .HasForeignKey("IndastrialSecId");

                    b.HasOne("StrattonOakmontModels.Securityes.SecurityInd", "SecurityInd")
                        .WithMany("Options")
                        .HasForeignKey("SecurityIndId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("CategorySec");

                    b.Navigation("IndastrialSec");

                    b.Navigation("SecurityInd");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.SecurityInd", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", null)
                        .WithMany("SecuritiesInd")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Type.SecuritySub", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", null)
                        .WithMany("SecuritiesSub")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Wright", b =>
                {
                    b.HasOne("StrattonOakmontModels.Stoсk", "Active")
                        .WithMany()
                        .HasForeignKey("ActiveId");

                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Indastrial", "IndastrialSec")
                        .WithMany()
                        .HasForeignKey("IndastrialSecId");

                    b.HasOne("StrattonOakmontModels.Securityes.SecurityInd", "SecurityInd")
                        .WithMany("Wrights")
                        .HasForeignKey("SecurityIndId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("Active");

                    b.Navigation("CategorySec");

                    b.Navigation("IndastrialSec");

                    b.Navigation("SecurityInd");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.Stoсk", b =>
                {
                    b.HasOne("StrattonOakmontModels.Category", "CategorySec")
                        .WithMany()
                        .HasForeignKey("CategorySecId");

                    b.HasOne("StrattonOakmontModels.Company", "CompanySec")
                        .WithMany()
                        .HasForeignKey("CompanySecId");

                    b.HasOne("StrattonOakmontModels.Security", "Security")
                        .WithMany("Stocks")
                        .HasForeignKey("SecurityId");

                    b.HasOne("StrattonOakmontModels.User", "UserSec")
                        .WithMany()
                        .HasForeignKey("UserSecId");

                    b.Navigation("CategorySec");

                    b.Navigation("CompanySec");

                    b.Navigation("Security");

                    b.Navigation("UserSec");
                });

            modelBuilder.Entity("StrattonOakmontModels.User", b =>
                {
                    b.HasOne("StrattonOakmontModels.Securityes.Type.SecuritySub", "SecuritySub")
                        .WithMany()
                        .HasForeignKey("SecuritySubId");

                    b.Navigation("SecuritySub");
                });

            modelBuilder.Entity("StrattonOakmontModels.Bond", b =>
                {
                    b.Navigation("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Category", b =>
                {
                    b.Navigation("Securities");

                    b.Navigation("SecuritiesInd");

                    b.Navigation("SecuritiesSub");
                });

            modelBuilder.Entity("StrattonOakmontModels.Company", b =>
                {
                    b.Navigation("Security");
                });

            modelBuilder.Entity("StrattonOakmontModels.Security", b =>
                {
                    b.Navigation("Bonds");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Bill", b =>
                {
                    b.Navigation("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.DepositReceipts", b =>
                {
                    b.Navigation("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Forward", b =>
                {
                    b.Navigation("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Futures", b =>
                {
                    b.Navigation("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Option", b =>
                {
                    b.Navigation("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.SecurityInd", b =>
                {
                    b.Navigation("Forwards");

                    b.Navigation("Futures");

                    b.Navigation("Options");

                    b.Navigation("Wrights");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Type.SecuritySub", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("DepositReceipts");
                });

            modelBuilder.Entity("StrattonOakmontModels.Securityes.Wright", b =>
                {
                    b.Navigation("PriceСhanges");
                });

            modelBuilder.Entity("StrattonOakmontModels.Stoсk", b =>
                {
                    b.Navigation("PriceСhanges");
                });
#pragma warning restore 612, 618
        }
    }
}
